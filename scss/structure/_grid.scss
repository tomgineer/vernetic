/**
 * Vernetic Framework
 * Website : https://vernetic.io
 * GitHub: https://github.com/tompapatolis/vernetic
 * Version : 2024
 * Author  : Tom Papatolis
 * ⎯⎯⎯⎯⎯⎯[ Grid ] ⎯⎯⎯⎯⎯⎯
 */

@use 'sass:map';
@use '../abstracts/mixins' as m;
@use '../abstracts/sizes' as s;

/**
 * Display
 */

.grid {
    display: grid;
}

.grid-inline {
    display: inline-grid;
}

/**
 * Grid Columns
 * --- Values: 1,2,3,4,5,6,7,8,9,10
 */

@for $i from 1 through 10 {
	.grid-col-#{$i} {
		grid-template-columns: repeat($i, 1fr);
	}

	.grid-col-span-#{$i} {
		grid-column: span $i;
	}

	.grid-row-span-#{$i} {
		grid-row: span $i;
	}
}

@include m.mq(medium) {
	@for $i from 1 through 10 {
		.grid-col-md-#{$i} {
			grid-template-columns: repeat($i, 1fr);
		}
	}

	@for $i from 1 through 10 {
		.grid-col-span-md-#{$i} {
			grid-column: span $i;
		}
	}
}

@include m.mq(small) {
	@for $i from 1 through 10 {
		.grid-col-sm-#{$i} {
			grid-template-columns: repeat($i, 1fr);
		}
	}
}

@include m.mq(small) {
	.grid-break-sm {
		grid-template-columns: 1fr !important;
		* {
			grid-column: span 1 !important;
			grid-row: span 1 !important;
		}
	}
}

/**
 * Auto Columns
 * --- Values: 50,80,100,120,150,175,200,225,250,300,320,350,400,450
 */

@each $suffix, $value in s.$grid_col_sizes {
	.grid-col-auto-#{$suffix} {
		grid-template-columns: repeat(auto-fill, minmax($value + px, 1fr));
	}
}

/**
 * Spread
 */

.grid-col-spread {
	grid-column: 1 / -1;
}

@include m.mq(small) {
    .grid-col-spread-sm {
        grid-column: 1 / -1;
    }
}

.grid-col-2-spread {
	grid-template-columns: 1fr auto;
}

/**
 * Alignment
 */

.grid-center {
    justify-content: center;
	align-items: center;
}

.grid-vcenter {
    align-items: center;
}

.grid-hcenter {
    justify-content: center;
}

.grid-top {
	align-items: start;
}

.grid-bottom {
	align-items: end;
}

.grid-last-right {
    grid-column-end: -1;
}

/**
 * Align Self
 */

.grid-self-bottom {
	align-self: end;
}

.grid-self-right {
    justify-self: right;
}

.grid-self-center {
    justify-self: center;
}

.grid-self-spread {
    align-self: stretch;
}

/**
 * Grid/Flex Gaps
 */

@each $suffix, $value in s.$gaps {
	.gap-#{$suffix} {
		gap: $value + rem;
	}

	.gap-row-#{$suffix} {
		row-gap: $value + rem;
	}

	.gap-col-#{$suffix} {
		column-gap: $value + rem;
	}
}

@include m.mq(small) {
    @each $suffix, $value in s.$gaps {
        .gap-sm-#{$suffix} {
            gap: $value + rem !important;
        }
    }
}

/**
 * Flow
 */

.grid-flow-row {
    grid-auto-flow: row;
}

.grid-flow-column {
    grid-auto-flow: column;
}

/**
 * Helpers
 */

.grid-eq-h {
    grid-auto-rows: 1fr;
}

.grid-eq-w {
    grid-auto-columns: 1fr;
}

.grid-col-2-master {
    grid-template-columns: auto 1fr;
}

.grid-col-3-master {
    grid-template-columns: auto auto 1fr;
}


/**
 * Grid Table
 */

 .grid-table {
    font-family: var(--ff-heading);
    > * {
        border-bottom: 1px solid rgba(255,255,255,.1);
        padding: .375rem .5rem;
    }

    &__head {
        font-size: var(--fs-300);
        font-weight: 500;
    }

    &--4 {
        grid-template-columns: repeat(1, fit-content(300px)) 1fr repeat(2, fit-content(300px));
        >*:nth-last-child(-n+4) {
            border-bottom: none;
        }
    }
    &--6 {
        grid-template-columns: repeat(2, fit-content(300px)) 2fr 3fr repeat(2, fit-content(300px));
        >*:nth-last-child(-n+6) {
            border-bottom: none;
        }
    }
    &--7 {
        grid-template-columns: repeat(2, fit-content(300px)) 1fr repeat(4, fit-content(300px));
        >*:nth-last-child(-n+7) {
            border-bottom: none;
        }
    }
    &--7b {
        grid-template-columns: repeat(3, fit-content(300px)) 1fr repeat(3, fit-content(300px));
        >*:nth-last-child(-n+7) {
            border-bottom: none;
        }
    }
    &--7c {
        grid-template-columns: repeat(2, fit-content(300px)) 1fr repeat(4, fit-content(300px));
        >*:nth-last-child(-n+7) {
            border-bottom: none;
        }
    }
    &--7d {
        grid-template-columns: fit-content(300px) 2fr 3fr repeat(4, fit-content(300px));
        >*:nth-last-child(-n+7) {
            border-bottom: none;
        }
    }
    &--8 {
        grid-template-columns: repeat(2, fit-content(300px)) 2fr 3fr repeat(4, fit-content(300px));
        >*:nth-last-child(-n+8) {
            border-bottom: none;
        }
        @media(max-width: 990px) {
            grid-template-columns: fit-content(300px) 1fr fit-content(300px);
            >*:nth-last-child(-n+3) {
                border-bottom: none;
            }
        }
    }
    &--10 {
        grid-template-columns: repeat(6, fit-content(300px)) 1fr repeat(3, fit-content(300px));
        >*:nth-last-child(-n+10) {
            border-bottom: none;
        }
    }
    &--12 {
        grid-template-columns: repeat(4, fit-content(300px)) 1fr repeat(7, fit-content(300px));
        >*:nth-last-child(-n+12) {
            border-bottom: none;
        }
    }
}
